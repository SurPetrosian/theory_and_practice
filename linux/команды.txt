clear — команда для очистки консоли от текста.
Рассмотрим основные команды для навигации в файловой структуре:
~ — домашняя директория;
/ — корень ОС;
.. — родительская директория;
.  — текущая директория, где мы сейчас находимся;
pwd — показать абсолютный путь до текущей директории;
cd — изменить каталог;
ls — посмотреть список файлов и директорий.
Всё в Linux начинается с / — это корневая директория.

Для навигации в терминале используется команда cd (англ. change directory — изменить каталог).
Сначала пишется команда cd, а затем путь, куда нужно перейти: cd /home. / перед home значит абсолютный путь для команды
cd, а не путь относительно текущего каталога.
cd home(без /) предполагает, что в текущей директории есть директория home. cd /home — это переход в папку home,
которая находится в корневой директории, при этом в текущей ее может и не быть.

cd ..  — перейти в директорию уровнем выше.
cd ../..  — перейти в директорию двумя уровнями выше.
cd — перейти в домашнюю директорию пользователя.
cd ~user_name — перейти в домашнюю директорию пользователя user_name.
cd - — перейти в директорию, в которой находились до перехода в текущую директорию.

ls - отобразить содержимое текущей директории
ls -la — чтобы вывести все файлы, включая скрытые, с подробным описанием

Команды файловой структуры

mkdir — создать директорию. Чтобы создать две директории одновременно: mkdir dir1 dir2. Так создается дерево директорий: mkdir -p /dir1/dir2

touch — создать файл.
Как создать файл. Файл в терминале Linux можно создать тремя способами:
С помощью команды
touch (от англ. touching):
touch /путь/к/файлу/название_файла
Пример:
touch file.txt
Через перенаправление стандартного потока вывода:
echo '' > название_файла
Пример:
echo '' > file
С помощью любого текстового редактора (о текстовом редакторе подробнее рассказывается дальше):
nano nano_file.txt
vim vim_file.txt

cp — копировать файл или директорию.
mv — переместить файл или директорию.
rm — удалить файл или директорию.Чтобы удалить директорию с именем dir1 и рекурсивно всё ее содержимое, наберите:
rm -r dir1. Если к команде rm добавить параметр -f, то при удалении не будет запрашиваться подтверждение на удаление.
rmdir - работает только для директорий, причем для пустых(удаление).

Как перемещать и переименовывать файлы и директории
Чтобы переименовать файл, выполните команду:
mv название_файла новое_название
Чтобы переместить файл, используется команда:
mv название_файла путь/

Для копирования используется команда cp (от англ. copy).
Чтобы скопировать файл file1 и назвать его file2, выполните команду:
cp file1 file2
Копировать директорию dir1 в директорию dir2:
cp -a dir1/ dir2/
Копировать файл с именем file1 в директорию c именем dir1:
cp file1 dir1/

Чтение файлов
more — постраничный ввод файла только вперед.
less — постраничный вывод файла вперед и назад.
head — просмотр файла с заданным количеством строк с начала.
tail — просмотр файла с заданным количеством строк с конца.
cat — просмотр всего файла.

Команда grep
С помощью команды grep можно получить предложение из файла, содержащее определенную строку текста.
grep слово file_name

Логи (лог-файлы) — это файлы, содержащие системную информацию работы сервера или компьютера.



урок 10.2
Стандартные потоки в ОС
При старте любой программы операционная система связывает с ней три потока:

 stdin (standard input — стандартный ввод),
 stdout (standard output — стандартный вывод), по умолчанию вывод происходит на экран терминала.
 stderr (standard error — стандартный вывод ошибок).

 Поток вывода stdout
> - чтобы перенаправить запись. Команда запишет в file.txt содержание текущего каталога: ls > file.txt. Создается каждый раз заново.
>> - чтобы дописать в конец

Поток ввода stdin
< - чтобы перенаправить ввод. Команда cat выводит содержимое file.txt, но не на экран, а на вход grep: grep text <(cat filename.txt)

Поток ошибок stderr
2> - вывод сообщений об ошибках на экран. Пример: ls -l dir3 > result 2>/dev/null. В данном примере весь вывод стандартного потока ошибок будет перенаправлен в пустое устройство,
которое в Linux находится по адресу /dev/null.
2>> - чтоб дописать поток ошибок

Пайплайн (англ. pipeline — конвейер) — объединение потоков ввода и вывода и обработка каждого следующего. | - это пайп
Пример пайплайна:
cat names | grep A | sort | uniq | tail -100

Рассмотрим, что происходит в примере выше:
Читается файл names с помощью cat.
Входные данные грепаются по подстроке "A" с помощью grep.
Входные данные сортируются с помощью sort.
Убираются дубли с помощью uniq.
На экран выводятся последние 100 строк с помощью tail -100

Переменные окружения — это специальные переменные, записанные в файл в операционной системе и доступные всем программам,
которые могут использовать их для своей настройки.

env - чтобы посмотреть установленные переменные

Локальные переменные окружения - переменные определены только для текущей сессии,не хранятся ни в каких файлах,
а создаются и удаляются с помощью специальных команд.

Пользовательские переменные оболочки - Определяются для конкретного пользователя и загружаются каждый раз,
когда пользователь входит в систему при помощи локального терминала или подключается удаленно.
Такие переменные хранятся в файлах конфигурации: .bashrc, .bash_profile, .bash_login, .profile или в других файлах,
размещенных в директории пользователя.

Системные переменные окружения - эти переменные доступны во всей системе, для всех пользователей.
Они загружаются при старте системы из системных файлов конфигурации:
/etc/environment, /etc/profile, /etc/profile.d/ /etc/bash.bashrc.

export - для установки переменной
echo - посмотреть значение переменной окружения, нужно поставить знак $


Пользователи и группы

whoami - чтобы выяснить имя пользователя

Группы, ассоциированные с текущим пользователем, показываются в выводе команды id.

Основные команды для работы с пользователями и группами:

useradd -m user1 — создать юзера user1 с домашней директорией.
userdel –r user1 — стереть юзера user1 с его домашней директорией.
passwd user1 — изменить пароль для юзера user1.
groupadd Developers — создать группу Developers.
groupdel Developers — стереть группу Developers.
usermod –aG Developers user1 — добавить юзера user1 в группу Developers.
deluser user1 Developers — удалить юзера user1 из групы Developers.

Права доступа
r — чтение;
w — запись;
x — исполнение.

Права задаются для трех типов пользователей: владельца (user), пользователей, входящих в ту же группу (group),
и остальных (other) — тех, кто не попал в предыдущие две.
Примеры:
rw-rw-rw- — все могут читать и изменять.
rwx------ — полный доступ имеет владелец файла.
rw-r--r-- — все могут читать, владелец — еще и изменять.
rwxr-xr-x — все могут читать и исполнять, владелец также может изменять.

Основные команды для работы с правами доступа:
chown — изменить владельца файла/директории;
chgrp — изменить группу файла/директории;
сhmod — изменить права доступа на файл/директорию.

Рассмотрим работу команды
сhmod
 на примере с файлом myfile.txt:
# Добавить х всем
chmod  ugo+x  myfile.txt
# Убрать rw у группы
сhmod  g-rw   myfile.txt
# Установить rw всем остальным
chmod  o=rw   myfile.txt
Дополнительная расшифровка к примеру:
u = user
g = group
o = other
a = ugo
